[{"url": "https://en.wikipedia.org/wiki/TypeScript", "passage_text": "As TypeScript is a superset of JavaScript, any existing JavaScript programs are also valid TypeScript programs. TypeScript supports definition files that can contain type information of existing JavaScript libraries, much like C/C++ header files can describe the structure of existing object files. The TypeScript compiler is itself written in TypeScript, transcompiled to JavaScript and licensed under the Apache 2 License. TypeScript is included as a first-class programming language in Microsoft Visual Studio 2013 Update 2 and later, beside C# and other Microsoft languages."}, {"url": "http://stackoverflow.com/questions/12687779/how-do-you-produce-a-d-ts-typings-definition-file-from-an-existing-javascript", "passage_text": "1. from what I can tell, tsc can compile any valid JavaScript, but if it is not valid TypeScript (compile gives warnings) then the --declarations flag does not output a .d.ts file, so unless your library is written in TypeScript you still need to manually create the declarations file. If you have an existing TypeScript library that you want to generate a .d.ts file for, you can use the --declaration command-line switch: share | improve this answer. edited Nov 16 '12 at 22:00."}, {"url": "https://en.wikipedia.org/wiki/TypeScript", "passage_text": "TypeScript is a free and open source programming language developed and maintained by Microsoft. It is a strict superset of JavaScript, and adds optional static typing and class-based object-oriented programming to the language. The TypeScript compiler is itself written in TypeScript, transcompiled to JavaScript and licensed under the Apache 2 License. TypeScript is included as a first-class programming language in Microsoft Visual Studio 2013 Update 2 and later, beside C# and other Microsoft languages."}, {"url": "https://github.com/ToTypeScriptD/ToTypeScriptD", "passage_text": "You can now generate TypeScript definition (*.d.ts) files from either .Net or .winmd assembly files. Allowing you to leverage these libraries in your TypeScript/JavaScript WinJS or other client side software applications with all the type safety and benefits of TypeScript. Generate TypeScript Definition files from Ecma 355 [Common Language Infrastructure (CLI)] (*.winmd/.net dll's)."}, {"url": "http://stackoverflow.com/questions/13118051/typescript-definition-files", "passage_text": "I'm playing with TypesScript, but the compiler complains when I use browser types such as HTMLCanvasElement. I guess I need definition files for these types. I bet there is a repository of definition files for the DOM and for most popular frameworks, but Google has not been able to help me find it. In addition to what @Christoffer has said for the DOM, @Boris Yankov has a really useful repository here: https://github.com/borisyankov/DefinitelyTyped with definition files for. close to two hundred libraries(and counting!). There's even a manager for the type definition files now: http://definitelytyped.org/tsd/."}, {"url": "http://sravi-kiran.blogspot.com/2012/10/CreatingTypeScriptTypeDeclarationFileForAnExistingJQueryPlugin.html", "passage_text": "I made the declaration file open on GitHub. You can find it here. Using the declaration file: To use the declaration file in a TypeScript file, a reference of the declaration file should be added. Calling the idleTimeout function in TypeScript is quite similar to that of in JavaScript code. Only difference being, we need to type cast the jQuery object to type of JQueryTimeout. "}, {"url": "https://www.npmjs.com/package/tsd", "passage_text": "TypeScript Definition manager for DefinitelyTyped. TSD is a package manager to search and install TypeScript definition files directly from the community driven DefinitelyTyped repository. "}, {"url": "http://walkercoderanger.com/blog/2014/02/typescript-isnt-the-answer/", "passage_text": "To deal with that, TypeScript supports type definition files. These are hand written files that provide the missing type declarations for an existing JavaScript library. Having good type definition files for the JavaScript libraries you want to use is an important part of having a good TypeScript experience. Microsoft points to the DefinitelyTyped project as the source of type definitions for popular JavaScript libraries."}]