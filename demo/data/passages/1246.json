[{"url": "https://msdn.microsoft.com/en-us/library/aa582241(v=ax.50).aspx", "passage_text": "The iterator is positioned at the first value in the list, if the list is not empty. next. Moves the iterator to the next element in the list. notify. Releases the hold on an object that has called a wait method on this object."}, {"url": "http://www.cplusplus.com/reference/list/list/begin/", "passage_text": "std:: list ::begin. Return iterator to beginning. Returns an iterator pointing to the first element in the list container. Notice that, unlike member list::front, which returns a reference to the first element, this function returns a bidirectional iterator pointing to it. If the container is empty, the returned iterator value shall not be dereferenced."}, {"url": "http://en.cppreference.com/w/cpp/container/list/insert", "passage_text": "1-2) Iterator pointing to the inserted value. 3) Iterator pointing to the first element inserted, or pos if count==0. 4) Iterator pointing to the first element inserted, or pos if first==last. 5) Iterator pointing to the first element inserted, or pos if ilist is empty."}, {"url": "http://stackoverflow.com/questions/10793404/behaviour-of-stdlistbegin-when-list-is-empty", "passage_text": "If the container is empty, then begin() == end(); All standard iterator and container types behave the same in this regard: \u00a723.2.1 [container.requirements.general] p6. begin() returns an iterator referring to the first element in the container. end() returns an iterator which is the past-the-end value for"}]