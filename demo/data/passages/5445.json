[{"url": "http://www.cplusplus.com/articles/D9j2Nwbp/", "passage_text": "To use stringstreams you need to. Converting a number to a string takes two steps using stringstreams: As with this conversion needs only output operation with the stream, an ostringstream (output string stream) can be used instead of the stream for both input and output (stringstream)."}, {"url": "https://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx", "passage_text": "The exponential (E) format specifier converts a number to a string of the form -d.ddd\u2026E+ddd or -d.ddd\u2026e+ddd, where each d indicates a digit (0-9). The string starts with a minus sign if the number is negative. Exactly one digit always precedes the decimal point."}, {"url": "https://msdn.microsoft.com/en-us/library/bb397679.aspx", "passage_text": "You can use Parse or TryParse methods on the numeric type you expect the string contains, such as the System.Int32 type. The Convert.ToUInt32 method uses Parse internally. If the string is not in a valid format, Parse throws an exception whereas TryParse returns false."}, {"url": "http://www.techrepublic.com/article/easily-format-string-output-with-nets-stringformat/", "passage_text": "C or c: The number is converted to a string that represents a currency amount. D or d: The number is converted to a string of decimal digits (0-9), prefixed by a minus sign if the number is negative. The precision specifier indicates the minimum number of digits desired in the resulting string."}, {"url": "https://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx", "passage_text": "The fixed-point (F) format specifier converts a number to a string of the form -ddd.ddd\u2026 where each d indicates a digit (0-9). The string starts with a minus sign if the number is negative. The precision specifier indicates the desired number of decimal places."}, {"url": "http://www.techrepublic.com/article/easily-format-string-output-with-nets-stringformat/", "passage_text": "E or e: The number is converted to a string of the form -d.ddd...E+ddd or -d.ddd...e+ddd, where each 'd' indicates a digit (0-9). The string starts with a minus sign if the number is negative."}, {"url": "http://stackoverflow.com/questions/894263/how-to-identify-if-a-string-is-a-number", "passage_text": "If you want to know if the string contains a whole number (integer): The TryParse method will try to convert the string to a number (integer) and if it succeeds it will return true and place the corresponding number in myInt. If it can't, it returns false."}, {"url": "https://msdn.microsoft.com/en-us/library/bb397679.aspx", "passage_text": "You can convert a string to a number by using methods in the Convert class or by using the TryParse method found on the various numeric types (int, long, float, etc.). If you have a string, it is slightly more efficient and straightforward to call a TryParse method (for example, int.TryParse(\u201c11\u201d))."}]